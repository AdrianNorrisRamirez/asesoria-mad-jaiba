service: flask-api-lambda

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11  # coincide con tu layer
  region: us-west-1
  timeout: 10
  
  # Define la etapa (stage) que se usará para seleccionar el archivo de entorno
  stage: ${opt:stage, 'local'}

  # Sección para definir las variables de entorno
  environment:
    DB_HOST: ${file(./envs/env.${self:provider.stage}.json):DB_HOST}
    DB_PORT: ${file(./envs/env.${self:provider.stage}.json):DB_PORT}
    DB_NAME: ${file(./envs/env.${self:provider.stage}.json):DB_NAME}
    DB_USER: ${file(./envs/env.${self:provider.stage}.json):DB_USER}
    DB_PASS: ${file(./envs/env.${self:provider.stage}.json):DB_PASS}
    LOGS: ${file(./envs/env.${self:provider.stage}.json):LOGS, 'prod'} # <--- AÑADE ESTA LÍNEA

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'
    layers:
      - arn:aws:lambda:us-west-1:749059848665:layer:test-layer:2  # Reemplaza con tu ARN

plugins:
  - serverless-wsgi


custom:
  wsgi:
    app: src/app.app
    packRequirements: false


package:
  exclude:
    - node_modules/**
    - venv/**
    - __pycache__/**
    - .venv/**
    - asesorias_accessKeys.csv
    - lambda-layer-builder.pem